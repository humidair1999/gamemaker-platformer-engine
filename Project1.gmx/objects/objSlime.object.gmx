<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSlime</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set variables
facing = 1;
hp = 2;
fall_damage = 1;
fall_damage_min_speed = 8;
fall_damage_max_speed = 10;
///Animation speed
image_speed = 0.3;
///Velocity &amp; limits
move_speed = 0;
///Gravity
grav = 0.22;
///Friction
air_frict = 0.04;
ground_frict = 0.09;
///Acceleration
air_acc = 0.00;
ground_acc = 0.09;
///Misc
damage = 1;
knockback = 3;
x_bounce = 0.5;
jump_timer = random_range(60, 120);
target = noone;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Death effect
var e = create_effect(x, y, sprSlimeDead, 0.5);
var f = 0.25;
e.hspeed = hsp*f;
e.vspeed = vsp*f;
repeat(irandom_range(6, 8))
{
    var a = instance_create(x, y, objSlimePiece);
    var f = 0.8;
    a.hsp += hsp*f;
    a.vsp += vsp*f;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Jump around!
jump_timer--;
///If the timer is nearly up... increase animation speed
///So that it looks like the slime is getting ready to jump!
if (jump_timer &lt; room_speed*.6)
{
    image_speed = 0.6;
}
///If the timer is up... jump!
if (jump_timer &lt; 0)
{
    //Reset the jump timer &amp; image speed
    jump_timer = random_range(120, 180);
    image_speed = 0.3;
    ///Check if we're on the ground... can't jump otherwise!
    if (ground || in_water)
    {
        ///Find the closest target
        target = instance_nearest(x, y, objPlayer);
        var dir = choose(1, -1); //default direction is either left or right
        if (target != noone) //if we found a target...
        {
            ///Set jump direction in the direction of the target
            dir = ((target.x &gt; x)*2)-1;
        }
        ///Jump in the given direction!
        hsp += random_range(2, 3)*dir;
        vsp -= random_range(3, 4);
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objEntity">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Damage target entity
if (other.id == target)
{
    other.take_damage += damage;
    var dir = point_direction(mid_x(), mid_y(), mid_x(other), mid_y(other));
    with (other)
    {
        add_speed(other.knockback, dir);
        vsp -= 1;
    }
    add_speed(-knockback, dir);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,16</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
