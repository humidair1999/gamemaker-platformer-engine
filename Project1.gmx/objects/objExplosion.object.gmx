<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set variables
max_damage = 4;
min_damage = 0;
max_knockback = 8;
min_knockback = 1;
radius = 40;
timer = 1;
var a = create_effect(x, y, sprExplosion, 0.8);
a.depth = -200;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Explode!
var xx, yy, dis, dir;
timer--;
if (timer &lt; 0)
{
    ///Destroy blocks
    var blocks = collision_circle_multiple(x, y, radius, objBlock, false, true);
    var size = ds_list_size(blocks);
    for (var i = 0; i &lt; size; i++)
    {
        var obj = blocks[|i]; //get the current block from the list
        destroy_block(obj); //destroy the block if it's destructable
    }
    ds_list_destroy(blocks);
    
    ///Hit entities
    var entities = collision_circle_multiple(x, y, radius, objEntity, false, true);
    var size = ds_list_size(entities);
    for (var i = 0; i &lt; size; i++)
    {
        var obj = entities[|i]; //get the current entity from the list
        dis = point_distance(x, y, mid_x(obj), mid_y(obj));
        dir = point_direction(x, y, mid_x(obj), mid_y(obj));
        var factor = min(1, (radius/dis));
        ///Knockback
        var k = max(min_knockback, max_knockback*factor);
        with (obj)
        {
            add_speed(k, dir);
            vsp -= 1;
        }
        ///Damage
        if (obj.can_damage)
        {
            var d = max(min_damage, max_damage*factor);
            obj.take_damage += d;
        }
    }
    ds_list_destroy(entities);
    
    ///Create particles
    repeat(40)
    {
        dis = set_chance(70, irandom(radius), irandom(radius*1.5));
        dir = irandom(360);
        xx = x+lengthdir_x(dis, dir);
        yy = y+lengthdir_y(dis, dir);
        var spr = set_chance(80, sprDust, sprSparkle);
        var a = create_effect(xx, yy, spr, random_range(0.1, 0.4));
        a.depth = -220;
        a.image_alpha = random_range(0.5, 1);
    }
    
    ///Destroy the object
    instance_destroy();
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
