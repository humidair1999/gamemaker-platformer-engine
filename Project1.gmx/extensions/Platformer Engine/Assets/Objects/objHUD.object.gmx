<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>icoHUD</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-300</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set variables
target = noone;
hp = 0;
max_hp = 0;
hp_flash = 0;
gold = 0;
gold_scale = 1;
gold_scale_target = 1;
gold_flash = 0;
fps_round = 0;
fps_timer = 0;
c_test = c_orange; ///Colour of test text

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set variables
var old_gold = gold;
var old_hp = hp;
if (gold_flash &gt; 0)
{
    gold_flash--;
}
if (hp_flash &gt; 0)
{
    hp_flash--;
}

///Update values to display on the HUD
if (target != noone)
{
    if (instance_exists(target))
    {
        hp = target.hp;
        max_hp = target.max_hp;
        gold = target.gold;
    }
    else
    {
        hp = 0; //The target is dead!
        target = noone;
    }
}

///If hp value has decreased, flash the health bar!
if (old_hp != hp)
{
    hp_flash += 4;
}

///If the gold value has increased,
///increase the scale depending on the increase amount
if (old_gold &lt; gold)
{
    gold_scale = min(2, gold_scale+min(0.25, (gold-old_gold)/20));
    gold_flash += 2;
}

///Slowly reduce gold scale back to 1
var k = 0.1;
gold_scale = smooth_approach(gold_scale, gold_scale_target, k);

///Update fps
fps_timer--;
if (fps_timer &lt; 0)
{
    fps_round = round(fps_real);
    fps_timer = 2;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw HUD
var xx = view_xview+2;
var yy = view_yview+2;
///Draw health bar
if (hp_flash &gt; 0)
{
    d3d_set_fog(true, c_white, 1, 0);
}
draw_sprite_healthbar(xx, yy, 5, sprHeartIcon, hp, max_hp);
if (hp_flash &gt; 0)
{
    d3d_set_fog(0, 0, 0, 0);
}
///Draw gold
yy += 16+((9*((max_hp-1)/2 div 5)+1));
draw_set_font(font0);
draw_set_halign(fa_left);
draw_set_valign(fa_middle);
var str = string(gold)+"g";
if (gold_flash &gt; 0)
{
    draw_set_colour(c_white);
}
else
{
    draw_set_colour(c_black);
}
draw_text_transformed(xx+0, yy, str, gold_scale, gold_scale, 0);
draw_text_transformed(xx+2, yy, str, gold_scale, gold_scale, 0);
draw_text_transformed(xx+1, yy-1, str, gold_scale, gold_scale, 0);
draw_text_transformed(xx+1, yy+1, str, gold_scale, gold_scale, 0);
if (gold_flash &gt; 0)
{
    draw_set_colour(c_white);
}
else
{
    draw_set_colour(c_yellow);
}
draw_text_transformed(xx+1, yy, str, gold_scale, gold_scale, 0);
draw_set_colour(c_white);
///Draw test stuff
if (global.test_mode)
{
    yy += 14;
    draw_text_outlined(xx+1, yy, string(fps_round), c_test, c_black);
    yy += 14;
    draw_text_outlined(xx+1, yy, "Entities: "+string(instance_number(objEntity)), c_test, c_black);
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
